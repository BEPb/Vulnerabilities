'''Insecure temporary file creation methods should not be used

Vulnerability
Critical

    Available SinceDec 19, 2023
    SonarQube (Python)
    Constant/issue: 10min

Creating temporary files using insecure methods exposes the application to race conditions on filenames: a malicious user can try to create a file with a predictable name before the application does. A successful attack can result in other files being accessed, modified, corrupted or deleted. This risk is even higher if the application run with elevated permissions.

In the past, it has led to the following vulnerabilities:

    CVE-2014-1858
    CVE-2014-1932

Noncompliant Code Example'''

import tempfile

filename = tempfile.mktemp() # Noncompliant
tmp_file = open(filename, "w+")

# Compliant Solution

import tempfile

tmp_file1 = tempfile.NamedTemporaryFile(delete=False) # Compliant; Easy replacement to tempfile.mktemp()
tmp_file2 = tempfile.NamedTemporaryFile() # Compliant; Created file will be automatically deleted

'''See

    OWASP Top 10 2021 Category A1 - Broken Access Control
    OWASP Top 10 2017 Category A9 - Using Components with Known Vulnerabilities
    MITRE, CWE-377 - Insecure Temporary File
    MITRE, CWE-379 - Creation of Temporary File in Directory with Incorrect Permissions
    OWASP, Insecure Temporary File
    Python tempfile module
    Python 2.7 os module'''
