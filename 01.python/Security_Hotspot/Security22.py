###### питон: S6304
Политики, предоставляющие доступ ко всем ресурсам учетной записи, чувствительны к безопасности.

Точка доступа безопасности
Блокатор

     Доступно с 19 декабря 2023 г.
     СонарКуб (Python)
     Постоянно/проблема: 5 минут

Политика, которая разрешает удостоверениям доступ ко всем ресурсам в учетной записи AWS, может нарушать принцип минимальных привилегий. Предположим, что у удостоверения есть разрешение на доступ ко всем ресурсам, хотя ему требуется доступ только к некоторым неконфиденциальным ресурсам. В этом случае произойдет несанкционированный доступ и раскрытие конфиденциальной информации.
Исключения

     Не следует вызывать ключевые политики (при использовании действий AWS KMS).
     Не следует поднимать вопросы о политиках, не использующих какие-либо ресурсы (тогда и только тогда, когда все действия в политике никогда не требуют ресурсов).


###### Спросите себя, есть ли

В учетной записи AWS имеется несколько ресурсов с разными уровнями чувствительности.

Риск существует, если вы ответили утвердительно на этот вопрос.
Пример несовместимого кода

Подстановочный знак «*» указан в качестве ресурса для этого PolicyStatement. Это предоставляет разрешение на обновление для всех политик учетной записи:

from aws_cdk.aws_iam import Effect, PolicyDocument, PolicyStatement

PolicyDocument(
    statements=[
        PolicyStatement(
            effect=Effect.ALLOW,
            actions="iam:CreatePolicyVersion",
            resources=["*"] # Sensitive
        )
    ]
)



### Рекомендуемые методы безопасного кодирования

Рекомендуется применять принцип наименьших привилегий, то есть предоставлять доступ только к необходимым ресурсам. Хорошей практикой для достижения этой цели является организация или маркировка ресурсов в зависимости от уровня конфиденциальности данных, которые они хранят или обрабатывают. Таким образом, управление безопасным контролем доступа менее подвержено ошибкам.
Соответствующее решение

Ограничьте разрешение на обновление соответствующим подмножеством политик:

from aws_cdk import Aws
from aws_cdk.aws_iam import Effect, PolicyDocument, PolicyStatement

PolicyDocument(
    statements=[
        PolicyStatement(
            effect=Effect.ALLOW,
            actions="iam:CreatePolicyVersion",
            resources=[f"arn:aws:iam::{Aws.ACCOUNT_ID}:policy/team1/*"]
        )
    ]
)

See

    OWASP Top 10 2021 Category A1 - Broken Access Control
    AWS Documentation - Grant least privilege
    MITRE, CWE-732 - Incorrect Permission Assignment for Critical Resource
    MITRE, CWE-284 - Improper Access Control
    OWASP Top 10 2017 Category A5 - Broken Access Control

