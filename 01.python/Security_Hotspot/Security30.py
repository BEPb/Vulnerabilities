###### Использование жестко закодированных IP-адресов чувствительно к безопасности.

Точка доступа безопасности
Незначительный

     Доступно с 19 декабря 2023 г.
     СонарКуб (Python)
     Постоянно/выпуск: 30 мин.

Жесткое кодирование IP-адресов чувствительно к безопасности. В прошлом это приводило к следующим уязвимостям:

     CVE-2006-5901
     CVE-2005-3725

Сегодняшние сервисы имеют постоянно меняющуюся архитектуру из-за потребностей в масштабировании и резервировании. Ошибочно думать, что у службы всегда будет один и тот же IP-адрес. Когда он изменится, жестко закодированный IP-адрес также придется изменить. Это окажет влияние на разработку, доставку и развертывание продукта:

     Каждый раз, когда это происходит, разработчикам придется быстро исправлять ситуацию, вместо того чтобы заставлять рабочую группу изменять файл конфигурации.
     Использование одного и того же адреса в каждой среде (dev, sys, qa, prod) вводит в заблуждение.

И последнее, но не менее важное: это влияет на безопасность приложений. Злоумышленники могут декомпилировать код и тем самым обнаружить потенциально конфиденциальный адрес. Они могут выполнить атаку типа «отказ в обслуживании» на службу, попытаться получить доступ к системе или попытаться подделать IP-адрес, чтобы обойти проверки безопасности. Такие атаки всегда возможны, но в случае жестко закодированного IP-адреса решение проблемы займет больше времени, что увеличит воздействие атаки.
Исключения

В следующих случаях о проблемах не сообщается, поскольку они не считаются конфиденциальными:

     Адреса обратной связи 127.0.0.0/8 в нотации CIDR (от 127.0.0.0 до 127.255.255.255)
     Широковещательный адрес 255.255.255.255
     Немаршрутизируемый адрес 0.0.0.0
     Строки вида 2.5.<номер>.<номер>, поскольку они часто соответствуют идентификаторам объектов (OID).
     Адреса в диапазонах 192.0.2.0/24, 198.51.100.0/24, 203.0.113.0/24, зарезервированы для целей документации согласно RFC 5737.
     Адреса в диапазоне 2001:db8::/32, зарезервированы для целей документации в RFC 3849.


###### спроси себя, есть ли

Раскрытый IP-адрес является конфиденциальным, например:

     Может предоставить злоумышленнику информацию о топологии сети.
     Это личный (присвоенный определенному лицу) IP-адрес.

Существует риск, если вы ответили утвердительно на любой из этих вопросов.
Пример конфиденциального кода

ip = '192.168.12.42'
sock = socket.socket()
sock.bind((ip, 9090))


### Рекомендуемые методы безопасного кодирования

Не жестко кодируйте IP-адрес в исходном коде, а сделайте его настраиваемым с помощью переменных среды, файлов конфигурации или аналогичного подхода. В качестве альтернативы, если конфиденциальность не требуется, можно использовать доменное имя, поскольку оно позволяет быстро изменить место назначения без необходимости пересборки программного обеспечения.
Соответствующее решение

ip = config.get(section, ipAddress)
sock = socket.socket()
sock.bind((ip, 9090))

See

    OWASP Top 10 2021 Category A1 - Broken Access Control
    OWASP Top 10 2017 Category A3 - Sensitive Data Exposure


