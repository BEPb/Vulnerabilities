###### Использование общедоступных для записи каталогов чувствительно к безопасности.

Точка доступа безопасности
Критический

     Доступно с 19 декабря 2023 г.
     СонарКуб (Python)

В операционных системах есть глобальные каталоги, к которым любой пользователь имеет доступ на запись. Эти папки в основном используются как области временного хранения, такие как /tmp в системах на базе Linux. Приложение, манипулирующее файлами из этих папок, подвергается гонке за именами файлов: злонамеренный пользователь может попытаться создать файл с предсказуемым именем раньше, чем это сделает приложение. Успешная атака может привести к доступу, изменению, повреждению или удалению других файлов. Этот риск еще выше, если приложение работает с повышенными разрешениями.

В прошлом это приводило к следующим уязвимостям:

    CVE-2012-2451
    CVE-2015-1838

Это правило вызывает проблему всякий раз, когда оно обнаруживает жестко закодированный путь к общедоступному для записи каталогу, например /tmp (см. примеры ниже). Он также обнаруживает доступ к переменным среды, которые указывают на общедоступные для записи каталоги, например, TMP и TMPDIR.

    /tmp
    /var/tmp
    /usr/tmp
    /dev/shm
    /dev/mqueue
    /run/lock
    /var/run/lock
    /Library/Caches
    /Users/Shared
    /private/tmp
    /private/var/tmp
    \Windows\Temp
    \Temp
    \TMP




###### Спросите себя, есть ли

     Файлы считываются или записываются в общедоступную папку.
     Приложение создает файлы с предсказуемыми именами в общедоступной папке.

Существует риск, если вы ответили утвердительно на любой из этих вопросов.
Пример конфиденциального кода

file = open("/tmp/temporary_file","w+") # Sensitive

tmp_dir = os.environ.get('TMPDIR') # Sensitive
file = open(tmp_dir+"/temporary_file","w+")



### Рекомендуемые методы безопасного кодирования

     Используйте выделенную подпапку со строго контролируемыми разрешениями.
     Используйте безопасные API для создания временных файлов. Такой API обеспечит:
         Сгенерированное имя файла непредсказуемо
         Файл доступен для чтения и записи только создавшему идентификатор пользователя.
         Дескриптор файла не наследуется дочерними процессами.
         Файл будет уничтожен, как только он будет закрыт.

Соответствующее решение

import tempfile

file = tempfile.TemporaryFile(dir="/tmp/my_subdirectory", mode='"w+") # Compliant

See

    OWASP Top 10 2021 Category A1 - Broken Access Control
    OWASP Top 10 2017 Category A5 - Broken Access Control
    OWASP Top 10 2017 Category A3 - Sensitive Data Exposure
    MITRE, CWE-377 - Insecure Temporary File
    MITRE, CWE-379 - Creation of Temporary File in Directory with Incorrect Permissions
    OWASP, Insecure Temporary File
    Python tempfile module

