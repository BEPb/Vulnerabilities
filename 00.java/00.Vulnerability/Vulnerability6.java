###### Анализаторы XML не должны быть уязвимы для атак типа «отказ в обслуживании».

Уязвимость
Главный

     Доступно с 19 декабря 2023 г.
     СонарКьюб (Java)
     Постоянно/выпуск: 15 мин.

Атака XML-бомба/миллиард смеха — это вредоносный XML-документ, содержащий один и тот же большой объект, повторяемый снова и снова. Если не установлено никаких ограничений, таких как ограничение на количество расширений сущностей, процессор XML может потреблять много памяти и времени во время анализа таких документов, что приводит к отказу в обслуживании.
Пример несовместимого кода

Для фабрик DocumentBuilder, SAXParser и Schema и Transformer JAPX:

DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
factory.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, false); // Noncompliant

SAXParserFactory factory = SAXParserFactory.newInstance();
factory.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, false); // Noncompliant

SchemaFactory factory = SchemaFactory.newInstance(XMLConstants.W3C_XML_SCHEMA_NS_URI);
factory.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, false); // Noncompliant

TransformerFactory factory = javax.xml.transform.TransformerFactory.newInstance();
factory.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, false); // Noncompliant

For Dom4j library:

SAXReader xmlReader = new SAXReader();
xmlReader.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, false); // Noncompliant

For Jdom2 library:

SAXBuilder builder = new SAXBuilder();
builder.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, false);  // Noncompliant

Compliant Solution

For DocumentBuilder, SAXParser and Schema and Transformer JAPX factories:

DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
factory.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);

SAXParserFactory factory = SAXParserFactory.newInstance();
factory.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);

SchemaFactory factory = SchemaFactory.newInstance(XMLConstants.W3C_XML_SCHEMA_NS_URI);
factory.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);

TransformerFactory factory = javax.xml.transform.TransformerFactory.newInstance();
factory.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);

For Dom4j library:

SAXReader xmlReader = new SAXReader();
xmlReader.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);

For Jdom2 library:

SAXBuilder builder = new SAXBuilder();
builder.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);

See

    Oracle Java Documentation - XML External Entity Injection Attack
    OWASP Top 10 2017 Category A4 - XML External Entities (XXE)
    OWASP XXE Prevention Cheat Sheet
    MITRE, CWE-776 - Improper Restriction of Recursive Entity References in DTDs ('XML Entity Expansion')


